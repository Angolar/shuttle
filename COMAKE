#edit-mode: -*- python -*-
#coding:utf-8

#工作路径.
WORKROOT('../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"_TEST_VERSION_\\\" -D_BD_KERNEL_')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-g -pipe -W -Wall -Werror -fPIC')

#C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -Werror -fPIC')

# protoc
PROTOC('../../third-64/protobuf/bin/protoc')

#头文件路径.
INCPATHS('. ./src ./output/include galaxy/output/include galaxy/common/include galaxy/ins/sdk/ ../../inf/computing/libhdfs/output/include')

#使用库
LIBS('galaxy/common/libcommon.a galaxy/ins/libins_sdk.a ./galaxy/libgalaxy.a')

#链接参数.
LDFLAGS('-lpthread -lz')

#依赖模块
CONFIGS('public/sofa-pbrpc@trunk@comake')
CONFIGS('third-64/gtest@1.6.0.100')
CONFIGS('thirdsrc/protobuf@2.6.2.0')
CONFIGS('third-64/boost@1.63.0.101')
CONFIGS('third-64/gflags@gflags_2-0-0-100_PD_BL')
CONFIGS('third-64/snappy@1.0.5.100')
CONFIGS('inf/computing/libhdfs@libhdfs_1-4-2-62665_PD_BL@COMAKE', IncludePaths('./output/include'))

master_src = 'src/master/master_main.cc \
              src/master/master_impl.cc \
              src/master/master_flags.cc \
              src/master/job_tracker.cc \
              src/master/resource_manager.cc \
              src/common/dfs_adaptor.cc \
              proto/app_master.proto \
              proto/minion.proto \
              proto/shuttle.proto'

minion_src = 'src/minion/minion_main.cc \
              src/minion/minion_impl.cc \
              src/minion/minion_flags.cc \
              src/sort/filesystem.cc \
              src/minion/partition.cc \
              proto/minion.proto \
              proto/app_master.proto \
              proto/shuttle.proto'

sdk_src = 'src/sdk/shuttle.cc \
           proto/app_master.proto \
           proto/shuttle.proto'

sdk_header = 'src/sdk/shuttle.h'

client_src = 'src/client/shuttle_main.cc'

executor_src = 'src/minion/executor_impl.cc \
                src/minion/executor_map.cc \
                src/minion/executor_reduce.cc \
                src/minion/executor_maponly.cc'

sort_src = 'proto/sortfile.proto \
            proto/shuttle.proto \
            src/sort/filesystem.cc \
            src/sort/sort_file_impl.cc'

sort_test_src = 'proto/sortfile.proto \
                 proto/shuttle.proto \
                 src/sort/sort_file_impl.cc \
                 src/sort/sort_file_hdfs_test.cc'

merge_test_src = 'src/sort/sort_file_impl.cc \
                  src/sort/merge_file_impl.cc \
                  proto/sortfile.proto \
                  proto/shuttle.proto \
                  src/sort/merge_file_test.cc'

sf_tool_src = 'src/sort/sf_tool.cc \
               src/sort/sort_file_impl.cc \
               src/sort/merge_file_impl.cc'

shuffle_tool_src = 'src/sort/shuffle_tool.cc \
                    src/sort/sort_file_impl.cc \
                    src/sort/merge_file_impl.cc'

input_reader_src = 'src/sort/input_reader.cc \
                    src/sort/filesystem.cc \
                    proto/shuttle.proto'

partition_src = 'src/minion/partition.cc \
                 proto/shuttle.proto'

input_tool_src = 'src/sort/input_tool.cc'

input_test_src = 'src/sort/input_test.cc'

partition_test_src = 'src/minion/partition_test.cc'

resourcemanager_test_src = 'src/master/resource_manager.cc \
                            src/master/resource_manager_test.cc \
                            src/master/master_flags.cc \
                            src/common/dfs_adaptor.cc \
                            proto/shuttle.proto'

Application('master', Sources(master_src))
Application('minion', Sources(minion_src, executor_src, sort_src))
Application('sort_test', Sources(sort_test_src, sort_src))
Application('merge_test', Sources(merge_test_src, sort_src))
Application('sf_tool', Sources(sort_src, sf_tool_src))
Application('input_tool', Sources(input_tool_src, input_reader_src))
Application('input_test', Sources(input_test_src, input_reader_src))
Application('partition_test', Sources(partition_src, partition_test_src))
Application('resourcemanager_test', Sources(resourcemanager_test_src))
Application('shuffle_tool', Sources(sort_src, shuffle_tool_src))

StaticLibrary('shuttle', Sources(sdk_src), HeaderFiles(sdk_header))
Directory('src/client', Prefixes('libshuttle.a'))
TARGET('copy-client-sh', ShellCommands('cp src/client/shuttle.sh output/bin/'))
TARGET('copy-client-conf', ShellCommands('cp src/client/shuttle.conf output/bin/'))
